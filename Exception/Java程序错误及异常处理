一、程序的错误类型

  程序的错误可以抽象分为三类：语法错误、运行错误和逻辑错误。

  1、语法错误
    是指由于编程中输入不符合语法规则而产生的。程序编译就通不过，程序不能运行起来。此类错误最简单，调试起来比较容易

  编译诊断的语法错误分为3种：致命错误、错误和警告。
        致命错误：这类错误大多是编译程序内部发生的错误，发生这类错误时，编译被迫终止，只能重新启动编译程序，
        但是这类错误很少发生，为了安全，编译前最好还是先保存程序。

        错误：这个错误通常是在编译时，语法不当所引起的。例如：括号不匹配，变量未声明等。产生这类错误时，编译
        程序会出现报错提示，我们根据提示对源程序进行修改即可。这类错误是出现最多的。

        警告：是指被编译程序怀疑有错，但是不确定，有时可强行通过。例如：没有加void声明的主函数没有返回值，double数据被转换为float类型等。
        这些警告中有些会导致错误，有些可以通过。

     常规解决方法：此类错误一般程序编译系统会自动提示相应的错误地点和错误原因，比如哪一行代码少了个括号等诸如此类的提示，常见的错误，看懂
     直接修改即可，如果是看不懂原因，可以将错误提示信息输入搜索引擎查找以下，一般都能找到具体的解决办法。或者有些编程平台会本身提供一个本
     地或者在线的信息库，提供详细的错误原因和解决办法，比如微软的.NET开发平台。

  2、运行错误
      指程序在运行过程中出现的错误。程序通过错误检测，但是运行的时候出现错误，导致程序被迫终止，此类错误有特定的发生条件，因此能够准确的定
      位错误代码段，因而调试也比较方便。

  3、逻辑错误
      程序运行后，没有得到设计者预期的结果，这就说明程序存在逻辑错误。这种错误在语法上是有效的，但是在逻辑上是错误的。
      程序运行了，也没有出错，但是执行出来的结果不是用户想要的，分为两种情况：

      A：能够看出错误：比如查询工资大于5000的人员名单，却出现了3000的；

      B：看不出错误，直到因缘际会发现程序肯定出错了，后果很严重：比如运行一个符合大型运算，把某个常数输入错了，最后的
      结果人工无法判断对错，又以该结果进行其他的运算等等，最后发现错了误差过大，就得从头排查错误。

二、Java的异常处理 (错误处理)
        程序的错误就是通常的异常，也叫Exception

        对于语法错误,Java编译系统在编就能发现检查出错误。

        对于逻辑异常，编译系统是无法发现错误的，错误需要人为去发现排除错误。

        对于运行错误，Java语言中代表异常时，使用一个专门的类来代表一种特定的异常情况，在系统中传递的异常情况就
        是该类的对象，所有代表异常的类组成体系就是Java语言中的异常类体系。

        1、Java异常类
        Java的异常是一个对象，所有的异常都直接或间接地继承Throwable类。

        为了方便对于这些可传递对象的管理，Java API中专门设计了JAVA.lang.throwable类，只有该类子类的对象才可以在系统的异常
        传递体系中进行。该类的两个子类分别是：

        1、Error类
        该类代表错误，指程序无法恢复的异常情况。对于所有错误类型以及其子类，都不要求程序进行处理。常见的Error类型例如
        内存溢出StackOverflowError等。

        2、Exception类
        该类代表异常，指程序有可能恢复的异常情况。该类就是整个Java语言异常类体系中的父类。使用该类，可以代表所有异常的
        情况。

        在Java API中，声明了几百个Exception的子类分别来代表各种各样的常见异常情况，这些异常类中，根据是否是程序自身导致的异常，
        将所有的异常类分为两种：

        a) RuntimeException及其所有子类
        该类异常属于程序运行时异常，也就是由于程序自身的问题导致产生的异常，例如数组下标越界异常
        ArrayIndexOutOfBoundException等。

        该类异常在语法上不强制程序员必须处理，即使不处理这样的异常也不会出现语法错误。

        b)  其他Exception子类
        该类异常属于程序外部的问题引起的异常，也就是由于程序运行时某些外部问题导致产生的异常，例如文件不存在异常FileNotFoundException等。

        该类异常在语法上强制程序员必须进行处理，如果不进行处理则会出现语法错误。
        熟悉异常类的分类，将有助于后续语法中的处理，也使得在使用异常类时可以选择恰当的异常类类型。

        2、常见的error类

        异常类名                    用途
        LinkageError            动态链接失败
        VirtuaIMachineError     虚拟机错误
        AWTError                AWT错误

        3、常见运行时异常类
        异常类名                                             用途
        ArithmeticException                     数学运算异常，比如除数为零的异常
        IndexOutOfBoundsException               下标越界异常，比如集合、数组等
        ArrayIndexOutOfBoundException           访问数组元素的下标越界异常
        StringIndexOutOfBoundsException         字符串下标越界异常
        ClassCaseException                      类强制转换异常
        NullpointerException                    当程序试图访问一个空数组中的元素，或访问一个空对象中
                                                的方法或变量时产生的异常

        4、常用的非运行时异常
        异常类名                                    用途
        ClassNotFoundException                     指定类或接口不存在异常
        IllegaIAccessException                     非法访问异常
        IOException                                输入输出异常
        FileNotFoundException                      找不到指定文件的异常
        ProtocolException                          网络协议异常
        MalformedURLException                      统一资源定位符(URL)的格式不正确的异常

        5、Java的异常处理机制描述如下：
        声明异常(throw)，或者try{}-捕获异常，catch(){}-处理异常，finally块-最终处理

        注意：
        一个try、catch、finally快之间不能插入任何其他代码

        catch可以有多个,try和finally只能有一个

        try后面必须要跟catch、finally其中的一个，即使一个try、catch、finally语句只能省略catch、finally中的一个。
